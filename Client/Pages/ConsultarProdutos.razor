@page "/ConsultarProdutos"

@using global::Shared.Models
@inject HttpClient httpClient




<h2>Stock de Produtos</h2>


<div class="p-3 shadow d-flex justify-content-center">
<label class="p-2">Consultar produtos pelo nome
<input class="form-control" @bind-value="palavra" />
    </label>

<button class="btn btn-primary" type="submit" @onclick="Carregar">Carregar dados</button>
</div>

<div class="p-3">

    <table class="table text-center">
        
        <tr>
			<td class="border p-1">#</td>
            <td class="border p-1">Nome</td>
            <td class="border p-1">Preço</td>
            <td class="border p-1">Quantidade</td>
            <td class="border p-1">Imagem</td>
        </tr>

          @foreach(Produto p in produtos)
            {
                <tr>
                    <td class="border p-1 ">@p.Id</td>
                    <td class="border p-1 ">@p.Nome</td>
                    <td class="border p-1 ">@p.Preco €</td>
                    <td class="border p-1 ">@p.Quantidade Unidades</td>
                    <td class="border p-1">
                        <img src="@p.Imagem" class="w-25" alt="Imagem do produto" />
                    </td>
                </tr>
            }
    </table>
</div>

<div class="text-center p-3 text-danger">
    @msg
</div>



@code {

    private List<Produto>? produtos = new();
    private string msg = "";
    string palavra = "";

    protected async Task Carregar()
    {
        string api = "/api/Produtos/Consultar";

        if (!string.IsNullOrEmpty(palavra))
        {
            api = $"/api/Produtos/Consultar?nome={palavra}";
        }


        HttpResponseMessage response = await httpClient.GetAsync(api);

        if (response.IsSuccessStatusCode)
        {
            produtos = await response.Content.ReadFromJsonAsync<List<Produto>>();

            
        }else
        {
			msg = await response.Content.ReadAsStringAsync();
        }

    }

}
